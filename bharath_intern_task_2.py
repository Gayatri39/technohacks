# -*- coding: utf-8 -*-
"""Bharath intern Task_2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zwyejnnfiYHI6vaDcT1Iyo2XvHenKPH5
"""

from sklearn.tree import DecisionTreeClassifier

# Create a simple dataset (features) with factors that may influence safety
# 0 represents No, and 1 represents Yes for binary features
# In a real-world application, you'd have a more extensive and diverse dataset.
features = [
    [1, 25, 1],  # Can swim, age 25, wearing a life jacket
    [1, 10, 0],  # Can swim, age 10, not wearing a life jacket
    [0, 60, 0],  # Can't swim, age 60, not wearing a life jacket
    [1, 35, 1],  # Can swim, age 35, wearing a life jacket
]

# Corresponding labels (0: Unsafe, 1: Safe)
labels = [1, 0, 0, 1]

# Create a decision tree classifier
classifier = DecisionTreeClassifier()

# Fit the model on the dataset
classifier.fit(features, labels)

# Define a new person's features
new_person = [1, 28, 1]  # Example: Can swim, age 28, wearing a life jacket

# Predict whether the person is safe or not
prediction = classifier.predict([new_person])

if prediction[0] == 1:
    print("The person is likely safe from sinking.")
else:
    print("The person may not be safe from sinking.")