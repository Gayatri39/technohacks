# -*- coding: utf-8 -*-
"""bharath inern task_3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14SqO9h_PeYUs6wuqOZGj2pS5kdjzNI4Y
"""

import tensorflow as tf
from tensorflow import keras
from tensorflow. keras import layers
import matplotlib.pyplot as plt
mnist = keras.datasets.mnist

(train_images, train_labels), (test_images, test_labels) = mnist.load_data()
train_images, test_images = train_images / 255.0, test_images / 255.0
model = keras.Sequential([
    layers.Flatten(input_shape=(28, 28)),  # Flatten the 28x28 images
    layers.Dense(128, activation='relu'),
    layers.Dropout(0.2),
    layers.Dense(10, activation='softmax')  # 10 output neurons for digits 0-9
])
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
model.fit(train_images, train_labels, epochs=5)
test_loss, test_accuracy = model.evaluate(test_images, test_labels)
print(f'Test accuracy: {test_accuracy}')
# Example of making a prediction
predictions = model.predict(np.expand_dims(test_images[0], axis=0))
plt.figure()
plt.imshow(test_images[0], cmap=plt.cm.binary)
plt.title(f"True Label: {test_labels[0]}, Predicted Label: {predicted_label}")
plt.show()